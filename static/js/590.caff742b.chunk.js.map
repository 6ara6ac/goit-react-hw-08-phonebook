{"version":3,"file":"static/js/590.caff742b.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Phonebook/ContactForm.js","components/ListContacts/ContactList.styled.js","components/ContactItem/ContactsItem.styled.js","components/ContactItem/ComtactItem.js","components/ListContacts/ContactList.js","components/Section/Section.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts\nexport const selectFilter = state => state.filter.value\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {        \n        if(filter === '' || !filter) {\n            return contacts;\n          }\n          else{\n            return contacts.filter(contact => {\n              return contact.name.toLowerCase().includes(filter.toLowerCase())\n            })\n          }\n    }\n)","\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"../../redux/contacts/selectors\";\nimport { Formik, Form, Field } from \"formik\"\nimport { addContact } from \"redux/contacts/operations\";\nimport { TextField, Button, Box } from '@mui/material'\n\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch()\n    const contacts = useSelector(selectContacts)\n    \n    const handleSubmit = (values, actions) => {\n      const {name, number} = values\n      const alreadyContact = contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase() || contact.number === number)\n      if (alreadyContact) {\n        return alert (`${name} is alredy in phonebook`);\n      }\n      dispatch(addContact(values))\n      actions.resetForm()\n  }\n\n          \n       return <>\n      <Formik initialValues={{name: '', number: ''}} onSubmit={ handleSubmit } >\n        <Form>\n          <Box sx={{display: 'flex', gap: '10px'}}>\n          <Field \n        type=\"text\"\n        name=\"name\"\n        label=\"name\"\n        as={TextField}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        />\n        <Field\n        type=\"tel\"\n        name=\"number\"\n        label='number'\n        as={TextField}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n            <Button variant=\"outlined\" type=\"submit\">Add contact</Button>\n            </Box>\n        </Form>\n    </Formik>\n   \n    </>\n\n      \n}\n","import styled from \"styled-components\";\n\n\nexport const List = styled.ul`\ndisplay:grid;\ngap: 10px;\n`\n\n","import styled from \"styled-components\";\n\n\nexport const Item = styled.li`\ndisplay:flex;\njustify-content: space-between;\n`","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { Item } from \"./ContactsItem.styled\";\nimport { Button } from '@mui/material'\n\n\nexport const ContactItem =({id, name , phone})=> {\n    const dispatch = useDispatch()\n\n    const handleDelete = () => dispatch(deleteContact(id))\n\n    return <Item sx={{listStyleType: 'none'}} key={id}>{name} : {phone}\n    <Button variant=\"outlined\" onClick={handleDelete}>delete</Button>\n    </Item>\n}","import { List } from \"./ContactList.styled\"\nimport { ContactItem } from \"components/ContactItem/ComtactItem\";\nimport { useSelector } from \"react-redux\"\nimport { selectVisibleContacts } from \"redux/contacts/selectors\"\n\nexport const ContactList = () => {\n  const contactsList = useSelector(selectVisibleContacts)\n\n  \n\n    \n  \n    return <List>\n    {contactsList.length > 0 && contactsList.map(({id, name, number})=>{\n      return (\n      <ContactItem\n      key={id}\n      id={id}\n      name={name}\n      phone={number}/>\n      );\n    })}\n\n    </List>\n}\n\n","import { Box } from '@mui/material'\nimport PropTypes from 'prop-types';\n\n\n\nexport const Section = ({mainTitle,title, children}) => {\n    return <Box sx={{backgroundColor: '#fff', padding: '30px', borderRadius: '20px',margin:'auto', marginBottom: '20px', maxWidth: '550px', boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)'}}>\n    {mainTitle && <h1>{mainTitle}</h1>}\n    {title && <h2>{title}</h2>}\n    {children}\n    </Box>\n    \n}\n\nSection.propTypes = {\n    mainTitle: PropTypes.string,\n    title: PropTypes.string,\n}\n \n","import styled from \"styled-components\";\n\nexport const FilterStyled = styled.div`\ndisplay:flex;\n`\n\nexport const Input = styled.input`\ndisplay:flex`","import { selectFilter } from \"redux/contacts/selectors\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeFilter } from \"redux/contacts/filterSlice\"\nimport { FilterStyled, Input } from \"./Filter.styled\"\nimport { TextField } from '@mui/material'\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch()\n  const filter = useSelector(selectFilter)\n  \n  const handleFilterChange = ({currentTarget: {value}}) => {\n    dispatch(changeFilter(value))\n  }\n \n\n  return <FilterStyled>\n  <Input as={TextField} label='filter' type=\"text\" name=\"filter\" value={filter} onChange={handleFilterChange} sx={{width:'100%', marginBottom:'30px'}}/>\n  </FilterStyled>\n}","import { ContactForm } from \"../components/Phonebook/ContactForm\";\nimport { ContactList } from \"../components/ListContacts/ContactList\";\nimport { Section } from \"../components/Section/Section\";\nimport { Filter } from \"../components/Filter/Filter\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsLoading } from \"redux/contacts/selectors\";\n\n\n\n\nconst Contacts = () => {\n  const dispatch = useDispatch()\n  const isLoading = useSelector(selectIsLoading);\n\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n\n  return <> \n  <Section mainTitle={'Phonebook'}>\n  <ContactForm />\n  </Section>\n  <Section title={'Contacts'}>\n  <Filter/>\n  <div>{isLoading && 'Request in progress...'}</div>\n  <ContactList />\n  </Section>\n  </>\n  }\n\n  export default Contacts\n"],"names":["selectContacts","state","contacts","selectFilter","filter","value","selectIsLoading","isLoading","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","initialValues","number","onSubmit","values","actions","some","alert","addContact","resetForm","Box","sx","display","gap","type","label","as","TextField","pattern","title","required","Button","variant","List","styled","Item","ContactItem","id","phone","listStyleType","onClick","deleteContact","ContactList","contactsList","length","map","Section","mainTitle","children","backgroundColor","padding","borderRadius","margin","marginBottom","maxWidth","boxShadow","FilterStyled","Input","Filter","onChange","currentTarget","changeFilter","width","useEffect","fetchContacts"],"sourceRoot":""}